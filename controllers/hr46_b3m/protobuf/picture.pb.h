// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: picture.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_picture_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_picture_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3015000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3015008 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_picture_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_picture_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_picture_2eproto;
::PROTOBUF_NAMESPACE_ID::Metadata descriptor_table_picture_2eproto_metadata_getter(int index);
namespace webotsvision {
class CameraMeasurement;
struct CameraMeasurementDefaultTypeInternal;
extern CameraMeasurementDefaultTypeInternal _CameraMeasurement_default_instance_;
}  // namespace webotsvision
PROTOBUF_NAMESPACE_OPEN
template<> ::webotsvision::CameraMeasurement* Arena::CreateMaybeMessage<::webotsvision::CameraMeasurement>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace webotsvision {

// ===================================================================

class CameraMeasurement PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:webotsvision.CameraMeasurement) */ {
 public:
  inline CameraMeasurement() : CameraMeasurement(nullptr) {}
  virtual ~CameraMeasurement();
  explicit constexpr CameraMeasurement(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CameraMeasurement(const CameraMeasurement& from);
  CameraMeasurement(CameraMeasurement&& from) noexcept
    : CameraMeasurement() {
    *this = ::std::move(from);
  }

  inline CameraMeasurement& operator=(const CameraMeasurement& from) {
    CopyFrom(from);
    return *this;
  }
  inline CameraMeasurement& operator=(CameraMeasurement&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CameraMeasurement& default_instance() {
    return *internal_default_instance();
  }
  static inline const CameraMeasurement* internal_default_instance() {
    return reinterpret_cast<const CameraMeasurement*>(
               &_CameraMeasurement_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(CameraMeasurement& a, CameraMeasurement& b) {
    a.Swap(&b);
  }
  inline void Swap(CameraMeasurement* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CameraMeasurement* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CameraMeasurement* New() const final {
    return CreateMaybeMessage<CameraMeasurement>(nullptr);
  }

  CameraMeasurement* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CameraMeasurement>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CameraMeasurement& from);
  void MergeFrom(const CameraMeasurement& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CameraMeasurement* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "webotsvision.CameraMeasurement";
  }
  protected:
  explicit CameraMeasurement(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_picture_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kImageFieldNumber = 5,
    kWidthFieldNumber = 2,
    kHeightFieldNumber = 3,
    kSimtimeFieldNumber = 6,
    kQualityFieldNumber = 4,
  };
  // string name = 1;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // bytes image = 5;
  void clear_image();
  const std::string& image() const;
  void set_image(const std::string& value);
  void set_image(std::string&& value);
  void set_image(const char* value);
  void set_image(const void* value, size_t size);
  std::string* mutable_image();
  std::string* release_image();
  void set_allocated_image(std::string* image);
  private:
  const std::string& _internal_image() const;
  void _internal_set_image(const std::string& value);
  std::string* _internal_mutable_image();
  public:

  // uint32 width = 2;
  void clear_width();
  ::PROTOBUF_NAMESPACE_ID::uint32 width() const;
  void set_width(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_width() const;
  void _internal_set_width(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 height = 3;
  void clear_height();
  ::PROTOBUF_NAMESPACE_ID::uint32 height() const;
  void set_height(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_height() const;
  void _internal_set_height(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // int64 simtime = 6;
  void clear_simtime();
  ::PROTOBUF_NAMESPACE_ID::int64 simtime() const;
  void set_simtime(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_simtime() const;
  void _internal_set_simtime(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // sint32 quality = 4;
  void clear_quality();
  ::PROTOBUF_NAMESPACE_ID::int32 quality() const;
  void set_quality(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_quality() const;
  void _internal_set_quality(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:webotsvision.CameraMeasurement)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr image_;
  ::PROTOBUF_NAMESPACE_ID::uint32 width_;
  ::PROTOBUF_NAMESPACE_ID::uint32 height_;
  ::PROTOBUF_NAMESPACE_ID::int64 simtime_;
  ::PROTOBUF_NAMESPACE_ID::int32 quality_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_picture_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CameraMeasurement

// string name = 1;
inline void CameraMeasurement::clear_name() {
  name_.ClearToEmpty();
}
inline const std::string& CameraMeasurement::name() const {
  // @@protoc_insertion_point(field_get:webotsvision.CameraMeasurement.name)
  return _internal_name();
}
inline void CameraMeasurement::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:webotsvision.CameraMeasurement.name)
}
inline std::string* CameraMeasurement::mutable_name() {
  // @@protoc_insertion_point(field_mutable:webotsvision.CameraMeasurement.name)
  return _internal_mutable_name();
}
inline const std::string& CameraMeasurement::_internal_name() const {
  return name_.Get();
}
inline void CameraMeasurement::_internal_set_name(const std::string& value) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CameraMeasurement::set_name(std::string&& value) {
  
  name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:webotsvision.CameraMeasurement.name)
}
inline void CameraMeasurement::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:webotsvision.CameraMeasurement.name)
}
inline void CameraMeasurement::set_name(const char* value,
    size_t size) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:webotsvision.CameraMeasurement.name)
}
inline std::string* CameraMeasurement::_internal_mutable_name() {
  
  return name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CameraMeasurement::release_name() {
  // @@protoc_insertion_point(field_release:webotsvision.CameraMeasurement.name)
  return name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CameraMeasurement::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:webotsvision.CameraMeasurement.name)
}

// uint32 width = 2;
inline void CameraMeasurement::clear_width() {
  width_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CameraMeasurement::_internal_width() const {
  return width_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CameraMeasurement::width() const {
  // @@protoc_insertion_point(field_get:webotsvision.CameraMeasurement.width)
  return _internal_width();
}
inline void CameraMeasurement::_internal_set_width(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  width_ = value;
}
inline void CameraMeasurement::set_width(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_width(value);
  // @@protoc_insertion_point(field_set:webotsvision.CameraMeasurement.width)
}

// uint32 height = 3;
inline void CameraMeasurement::clear_height() {
  height_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CameraMeasurement::_internal_height() const {
  return height_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CameraMeasurement::height() const {
  // @@protoc_insertion_point(field_get:webotsvision.CameraMeasurement.height)
  return _internal_height();
}
inline void CameraMeasurement::_internal_set_height(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  height_ = value;
}
inline void CameraMeasurement::set_height(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_height(value);
  // @@protoc_insertion_point(field_set:webotsvision.CameraMeasurement.height)
}

// sint32 quality = 4;
inline void CameraMeasurement::clear_quality() {
  quality_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CameraMeasurement::_internal_quality() const {
  return quality_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CameraMeasurement::quality() const {
  // @@protoc_insertion_point(field_get:webotsvision.CameraMeasurement.quality)
  return _internal_quality();
}
inline void CameraMeasurement::_internal_set_quality(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  quality_ = value;
}
inline void CameraMeasurement::set_quality(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_quality(value);
  // @@protoc_insertion_point(field_set:webotsvision.CameraMeasurement.quality)
}

// bytes image = 5;
inline void CameraMeasurement::clear_image() {
  image_.ClearToEmpty();
}
inline const std::string& CameraMeasurement::image() const {
  // @@protoc_insertion_point(field_get:webotsvision.CameraMeasurement.image)
  return _internal_image();
}
inline void CameraMeasurement::set_image(const std::string& value) {
  _internal_set_image(value);
  // @@protoc_insertion_point(field_set:webotsvision.CameraMeasurement.image)
}
inline std::string* CameraMeasurement::mutable_image() {
  // @@protoc_insertion_point(field_mutable:webotsvision.CameraMeasurement.image)
  return _internal_mutable_image();
}
inline const std::string& CameraMeasurement::_internal_image() const {
  return image_.Get();
}
inline void CameraMeasurement::_internal_set_image(const std::string& value) {
  
  image_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CameraMeasurement::set_image(std::string&& value) {
  
  image_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:webotsvision.CameraMeasurement.image)
}
inline void CameraMeasurement::set_image(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  image_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:webotsvision.CameraMeasurement.image)
}
inline void CameraMeasurement::set_image(const void* value,
    size_t size) {
  
  image_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:webotsvision.CameraMeasurement.image)
}
inline std::string* CameraMeasurement::_internal_mutable_image() {
  
  return image_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CameraMeasurement::release_image() {
  // @@protoc_insertion_point(field_release:webotsvision.CameraMeasurement.image)
  return image_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CameraMeasurement::set_allocated_image(std::string* image) {
  if (image != nullptr) {
    
  } else {
    
  }
  image_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), image,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:webotsvision.CameraMeasurement.image)
}

// int64 simtime = 6;
inline void CameraMeasurement::clear_simtime() {
  simtime_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 CameraMeasurement::_internal_simtime() const {
  return simtime_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 CameraMeasurement::simtime() const {
  // @@protoc_insertion_point(field_get:webotsvision.CameraMeasurement.simtime)
  return _internal_simtime();
}
inline void CameraMeasurement::_internal_set_simtime(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  simtime_ = value;
}
inline void CameraMeasurement::set_simtime(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_simtime(value);
  // @@protoc_insertion_point(field_set:webotsvision.CameraMeasurement.simtime)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace webotsvision

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_picture_2eproto
